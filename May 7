//Cousins in Binary Tree
//https://leetcode.com/explore/featured/card/may-leetcoding-challenge/534/week-1-may-1st-may-7th/3322/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        int dist[101];
        for(int i=1;i<=100;i++) dist[i] = 1e9;
        int par[101]={0};
        queue<TreeNode*> q;
        q.push(root);
        dist[root->val]=0;
        while(!q.empty()){
            TreeNode* t = q.front();
            q.pop();
            if(t->left){
                q.push(t->left);
                dist[t->left->val] = dist[t->val]+1;
                par[t->left->val] = t->val;
            }
            if(t->right){
                q.push(t->right);
                dist[t->right->val] = dist[t->val]+1;
                par[t->right->val] = t->val;
            }
        }
        if(dist[x]==dist[y] and par[x]!=par[y]) return true;
        return false;
    }
};
