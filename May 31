//Edit Distance
//https://leetcode.com/explore/featured/card/may-leetcoding-challenge/538/week-5-may-29th-may-31st/3346/

#define f(i,a,b) for(int i=a;i<b;i++)
class Solution {
public:
    int minDistance(string s1, string s2) {
        int n = s1.size(), m = s2.size();
        int dp[n+1][m+1]; memset(dp,0,sizeof(dp));
        f(i,1,n+1) dp[i][0] = i;
        f(i,1,m+1) dp[0][i] = i;
        f(i,1,n+1){
            f(j,1,m+1){
                if(s1[i-1] == s2[j-1]) dp[i][j] = dp[i-1][j-1];
                else{
                    dp[i][j] = 1 + min(dp[i-1][j],min(dp[i-1][j-1],dp[i][j-1]));
                }
            }
        }
        return dp[n][m];
    }
};
