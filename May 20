//Kth Smallest Element in a BST
//https://leetcode.com/explore/featured/card/may-leetcoding-challenge/536/week-3-may-15th-may-21st/3335/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v;
    void pre(TreeNode* root){
        if(root == NULL) return;
        v.push_back(root->val);
        if(root->left) pre(root->left);
        if(root->right) pre(root->right);
    }
    int kthSmallest(TreeNode* root, int k) {
        pre(root);
        sort(v.begin(),v.end());
        return v[k-1];
    }
};
